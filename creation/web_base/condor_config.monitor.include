######################################################################
##
##  condor_config.monitor.include
##
##  Condor include file for monitor starter 
##
######################################################################

WORK_DIR=$(LOCAL_DIR)/monitor

# This is monitoring slot, be nice
JOB_RENICE_INCREMENT = 20

# force a single CPU (the WN could have many)
NUM_CPUS = 1
SLOT_TYPE_1 = cpus=1, memory=10%, swap=10%, disk=10%
NUM_SLOTS_TYPE_1 = 1

HAS_MONITOR_VM=True
IS_MONITOR_VM=True
USES_MONITOR_STARTD = True

STARTD_ATTRS = $(STARTD_ATTRS), IS_MONITOR_VM, HAS_MONITOR_VM, USES_MONITOR_STARTD,Monitored_Names

START = ((GLIDEIN_Is_Monitor=?=True) || (JOB_Is_Monitor=?=True))

IsOwner = (START =?= False)

# Max time a job is guaranteed to run in the glidein
# This is a monitoring job, so low limits
MaxJobRetirementTime=120
SHUTDOWN_GRACEFUL_TIMEOUT=10


# Set to shutdown if total idle exceeds max idle, or if the age
# exceeds the retire time or the max walltime
STARTD.DAEMON_SHUTDOWN = (Activity=="Idle") && (\
    ((TotalTimeUnclaimedIdle =!= UNDEFINED) && (GLIDEIN_Max_Idle =!= UNDEFINED)&& (TotalTimeUnclaimedIdle > GLIDEIN_Max_Idle))||\
    ((GLIDEIN_Retire_Time =!= UNDEFINED) && (CurrentTime - DaemonStartTime > GLIDEIN_Retire_Time)) || \
    ((GLIDEIN_Max_Walltime =!= UNDEFINED) && (CurrentTime - DaemonStartTime > GLIDEIN_Max_Walltime)) )

#
# Shutdown the master if the startd exits.  Note that if
# STARTD_StartTime is zero, that the startd is not currently running.
#
MASTER.DAEMON_SHUTDOWN = (STARTD_StartTime =?= 0)

